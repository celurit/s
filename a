const ffmpeg = require('fluent-ffmpeg')
const Installerffmpeg = require('@ffmpeg-installer/ffmpeg')
const Installerffprobe = require('@ffprobe-installer/ffprobe')
ffmpeg.setFfmpegPath(Installerffmpeg.path)
ffmpeg.setFfprobePath(Installerffprobe.path)
const fs = require('fs')
const youtubedl = require('youtube-dl')
const request =  require('request')
const md5 = require('md5')
const path = require('path')
const low = require('lowdb')
const FileSync = require('lowdb/adapters/FileSync')
const adapter = new FileSync('db.json')
const db = low(adapter)
const express = require('express')
const app = express()
const cors = require('cors')
const CronJob = require('cron').CronJob;

const output = 'videos/360.mp4'
  let downloaded = 0
  if (fs.existsSync(output)) {
    downloaded = fs.statSync(output).size
  }
   
  const video = youtubedl('https://drive.google.com/file/d/1NFVxw-VW8dPZda7FwLbxbhR6Fm2E0N7k',
   
    // Optional arguments passed to youtube-dl.
    ['--format=18'],
   
    // start will be sent as a range header
    { start: downloaded, cwd: __dirname })
   
  // Will be called when the download starts.
  video.on('info', function(info) {
    console.log('Download started')
    console.log('filename: ' + info._filename)
   
    // info.size will be the amount to download, add
    let total = info.size + downloaded
    console.log('size: ' + total)
   
    if (downloaded > 0) {
      // size will be the amount already downloaded
      console.log('resuming from: ' + downloaded)
   
      // display the remaining bytes to download
      console.log('remaining bytes: ' + info.size)
    }
  })
   
  video.pipe(fs.createWriteStream(output, { flags: 'a' }))
   
  // Will be called if download was already completed and there is nothing more to download.
  video.on('complete', function complete(info) {
    'use strict'
    console.log('filename: ' + info._filename + ' already downloaded.')
  })
   
  video.on('end', function() {
    console.log('finished downloading!')
  })
